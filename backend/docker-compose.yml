services:
  postgres:
    image: postgres:16
    container_name: postgres
    env_file:
      - ./order-service/.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - orbit-network

  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    container_name: order-service
    env_file:
      - ./order-service/.env
    ports:
      - "8081:8081"
    depends_on:
      - postgres
    networks:
      - orbit-network

  notification-service:
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    container_name: notification-service
    env_file:
      - ./notification-service/.env
    ports:
      - "8083:8083"
    depends_on:
      - postgres
    networks:
      - orbit-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zk
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
      
volumes:
  postgres_data:

networks:
  orbit-network:
      driver: bridge
